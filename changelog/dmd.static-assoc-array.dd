Global variables can now be initialized with Associative Arrays

Formerly, module constructors or `enum` had to be used to initialize global variables with Associtive Arrays.
By internally lowering to Steven Schveighoffer's [newaa](https://github.com/schveiguy/newaa/blob/master/source/schlib/newaa.d) struct implementation, Associative Arrays can now be used directly.

---
immutable string[string] table = ["key": "value"];

void main()
{
    assert(table["key"] == "value");
}
---

When the key/value types have `toHash`, `opEquals` or `~this` defined, they must be callable at compile time.
An `if (!__ctfe)` branch can be used to make a destructor only run at run time.
Future enhancements may obviate the need for this workaround.
